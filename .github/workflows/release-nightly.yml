###################################################################################################
###              THIS IS A WORKFLOW TO RELEASE NIGHTLY ARTIFACTS OF SCALA 3                     ###
### HOW TO USE:                                                                                 ###
###   - ???                                                                                     ###
###                                                                                             ###
### NOTE:                                                                                       ###
###   - ???                                                                                     ###
###################################################################################################

name: Nightly release of Scala 3
run-name: Nightly release of Scala 3

on:
  schedule:
    - cron: '0 3 * * *'  # Every day at 3 AM

env:
  DOTTY_CI_RUN: true
  NIGHTLYBUILD: yes

jobs:
  test-non-bootstrapped:
    uses: ./.github/workflows/test-non-bootstrapped.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  test-bootstrapped:
    uses: ./.github/workflows/test-bootstrapped.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  MiMa:
    uses: ./.github/workflows/test-mima.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  community-build:
    uses: ./.github/workflows/test-community-build.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  test-sbt:
    uses: ./.github/workflows/test-sbt.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  test-scala2-tasty:
    name: Test bootstrapped projects with Scala 2 TASTy
    uses: ./.github/workflows/test-scala2-library-tasty.yml
    secrets:
      develocity-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

  publish:
    runs-on: [self-hosted, Linux]
    container:
      image: lampepfl/dotty:2024-10-18
      options: --cpu-shares 4096
      volumes:
        - ${{ github.workspace }}/../../cache/sbt:/root/.sbt
        - ${{ github.workspace }}/../../cache/ivy:/root/.ivy2/cache
        - ${{ github.workspace }}/../../cache/general:/root/.cache
    strategy:
      matrix:
        branch: [main, lts-3.3]
    needs: [test-non-bootstrapped, test-bootstrapped, MiMa, community-build, test-sbt, test-scala2-tasty]
    if: github.repository == 'scala/scala3'
    env:
      PGP_PW: ${{ secrets.PGP_PW }}  # PGP passphrase
      PGP_SECRET: ${{ secrets.PGP_SECRET }}  # Export your private and public PGP key to an *.asc file, take the file's contents as a string
      SONATYPE_PW: ${{ secrets.SONATYPE_PW_ORGSCALALANG }}
      SONATYPE_USER: ${{ secrets.SONATYPE_USER_ORGSCALALANG }}

    steps:
      ######################################################################################
      ## WARNING: DO NOT CHANGE THE JAVA VERSION HERE. SCALA IS DISTRIBUTED USING JAVA 8. ##
      ######################################################################################
      - name: Set JDK 8 as default
        run: echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/scala/scala3" && git reset --hard FETCH_HEAD || true

      - name: Checkout cleanup script
        uses: actions/checkout@v4

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Add SBT proxy repositories
        run: cp -vf .github/workflows/repositories /root/.sbt/ ; true

      - name: Get version string for this build
        run: |
          ver=$(./project/scripts/sbt "print scala3-compiler-bootstrapped/version" | tail -n1)
          echo "This build version: $ver"
          echo "THISBUILD_VERSION=$ver" >> $GITHUB_ENV

      - name: Check whether not yet published
        id: not_yet_published
        continue-on-error: true
        run: |
          ! ./project/scripts/is-version-published.sh "$THISBUILD_VERSION"

      - name: Publish Nightly
        if: steps.not_yet_published.outcome == 'success'
        run: |
          ./project/scripts/sbtPublish ";project scala3-bootstrapped ;publishSigned ;sonatypeBundleRelease"

  update-documentation:
    runs-on: [self-hosted, Linux]
    container:
      image: lampepfl/dotty:2024-10-18
      options: --cpu-shares 4096
      volumes:
        - ${{ github.workspace }}/../../cache/sbt:/root/.sbt
        - ${{ github.workspace }}/../../cache/ivy:/root/.ivy2/cache
        - ${{ github.workspace }}/../../cache/general:/root/.cache
    needs: publish
    if: github.repository == 'scala/scala3'
    steps:
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/scala/scala3" && git reset --hard FETCH_HEAD || true

      - name: Checkout cleanup script
        uses: actions/checkout@v4

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Add SBT proxy repositories
        run: cp -vf .github/workflows/repositories /root/.sbt/ ; true

      - name: Generate Website
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          ./project/scripts/genDocs -doc-snapshot

      - name: Deploy Website to https://dotty.epfl.ch
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.DOTTYBOT_TOKEN }}
          publish_dir: docs/_site
          external_repository: scala/dotty.epfl.ch
          publish_branch: main

  open_issue_on_failure:
    runs-on: [self-hosted, Linux]
    container:
      image: lampepfl/dotty:2024-10-18
    needs: update-documentation
    # The `failure()` expression is true iff at least one of the dependencies
    # of this job (including transitive dependencies) has failed.
    if: failure()
    steps:
      - name: Checkout issue template
        uses: actions/checkout@v4
      - name: Open an issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          filename: .github/workflows/issue_nightly_failed.md